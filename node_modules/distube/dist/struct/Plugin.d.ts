import type DisTube from "../DisTube";
import type { Song } from ".";
import type { DisTubeHandler } from "../core";
/**
 * DisTube Plugin
 * @private
 */
export declare class Plugin {
    /** Type of the plugin */
    type: "custom" | "extractor";
    distube: DisTube;
    handler: DisTubeHandler;
    constructor(type: "custom" | "extractor");
    init(distube: DisTube): void;
    /**
     * Check if the url is working with this plugin
     * @param {string} url Input url
     * @returns {Promise<boolean>}
     */
    validate(url: string): Promise<boolean>;
    /**
     * Get the stream url from {@link Song#url}. Returns {@link Song#url} by default. Not needed if the plugin plays song from YouTube.
     * @param {string} url Input url
     * @returns {Promise<string>}
     */
    getStreamURL(url: string): Promise<string>;
    /**
     * (Optional) Get related songs from a supported url (Not needed to add {@link Song#related} and member is `null` because it will be added with this function later)
     * @param {string} url Input url
     * @returns {Promise<Song[]>}
     */
    getRelatedSongs(url: string): Promise<Song[]>;
}
export default Plugin;
//# sourceMappingURL=Plugin.d.ts.map