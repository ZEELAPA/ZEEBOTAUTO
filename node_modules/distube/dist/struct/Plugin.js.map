{"version":3,"file":"Plugin.js","sourceRoot":"","sources":["../../src/struct/Plugin.ts"],"names":[],"mappings":";;;AAKA;;;GAGG;AACH,MAAa,MAAM;IAKjB,YAAY,IAA4B;QACtC;;;WAGG;QACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACD,IAAI,CAAC,OAAgB;QACnB;;;WAGG;QACH,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB;;;WAGG;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;IACtC,CAAC;IACD;;;;OAIG;IACH,KAAK,CAAC,QAAQ,CAAC,GAAW;QACxB,OAAO,KAAK,CAAC;IACf,CAAC;IACD;;;;OAIG;IACH,KAAK,CAAC,YAAY,CAAC,GAAW;QAC5B,OAAO,GAAG,CAAC;IACb,CAAC;IACD;;;;OAIG;IACH,KAAK,CAAC,eAAe,CAAC,GAAW;QAC/B,OAAO,EAAE,CAAC;IACZ,CAAC;CACF;AAhDD,wBAgDC;AAED,kBAAe,MAAM,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/require-await, @typescript-eslint/no-unused-vars */\nimport type DisTube from \"../DisTube\";\nimport type { Song } from \".\";\nimport type { DisTubeHandler } from \"../core\";\n\n/**\n * DisTube Plugin\n * @private\n */\nexport class Plugin {\n  /** Type of the plugin */\n  type: \"custom\" | \"extractor\";\n  distube!: DisTube;\n  handler!: DisTubeHandler;\n  constructor(type: \"custom\" | \"extractor\") {\n    /**\n     * Type of the plugin\n     * @type {\"custom\"|\"extractor\"}\n     */\n    this.type = type;\n  }\n  init(distube: DisTube) {\n    /**\n     * DisTube\n     * @type {DisTube}\n     */\n    this.distube = distube;\n    /**\n     * Handler\n     * @type {DisTubeHandler}\n     */\n    this.handler = this.distube.handler;\n  }\n  /**\n   * Check if the url is working with this plugin\n   * @param {string} url Input url\n   * @returns {Promise<boolean>}\n   */\n  async validate(url: string): Promise<boolean> {\n    return false;\n  }\n  /**\n   * Get the stream url from {@link Song#url}. Returns {@link Song#url} by default. Not needed if the plugin plays song from YouTube.\n   * @param {string} url Input url\n   * @returns {Promise<string>}\n   */\n  async getStreamURL(url: string): Promise<string> {\n    return url;\n  }\n  /**\n   * (Optional) Get related songs from a supported url (Not needed to add {@link Song#related} and member is `null` because it will be added with this function later)\n   * @param {string} url Input url\n   * @returns {Promise<Song[]>}\n   */\n  async getRelatedSongs(url: string): Promise<Song[]> {\n    return [];\n  }\n}\n\nexport default Plugin;\n"]}