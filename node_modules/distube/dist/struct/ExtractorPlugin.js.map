{"version":3,"file":"ExtractorPlugin.js","sourceRoot":"","sources":["../../src/struct/ExtractorPlugin.ts"],"names":[],"mappings":";;;;;;AAAA,sDAA8B;AAI9B;;;GAGG;AACH,MAAa,eAAgB,SAAQ,gBAAM;IACzC,gCAAgC;IAChC;QACE,KAAK,CAAC,WAAW,CAAC,CAAC;IACrB,CAAC;IACD;;;;;OAKG;IACH,+FAA+F;IAC/F,KAAK,CAAC,OAAO,CAAC,GAAW,EAAE,MAAmB;QAC5C,OAAO,SAA4B,CAAC;IACtC,CAAC;CACF;AAfD,0CAeC;AAED,kBAAe,eAAe,CAAC","sourcesContent":["import Plugin from \"./Plugin\";\nimport type { Playlist, Song } from \".\";\nimport type { GuildMember } from \"discord.js\";\n\n/**\n * Extractor Plugin\n * @extends Plugin\n */\nexport class ExtractorPlugin extends Plugin {\n  /** Create a extractor plugin */\n  constructor() {\n    super(\"extractor\");\n  }\n  /**\n   * Execute if the url is validated (Not needed to add {@link Song#related} because it will be added with {@link Plugin#getRelatedSongs})\n   * @param {string} url URL\n   * @param {Discord.GuildMember} member Requested user\n   * @returns {Promise<Song|Song[]|Playlist>}\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/require-await\n  async resolve(url: string, member: GuildMember): Promise<Song | Playlist> {\n    return undefined as unknown as Song;\n  }\n}\n\nexport default ExtractorPlugin;\n"]}