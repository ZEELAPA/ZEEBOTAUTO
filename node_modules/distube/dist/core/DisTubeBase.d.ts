import type DisTube from "../DisTube";
import type DisTubeHandler from "./DisTubeHandler";
import type { Client, TextChannel } from "discord.js";
import type { DisTubeVoiceManager, Options, QueueManager } from ".";
/** @private */
export declare class DisTubeBase {
    distube: DisTube;
    constructor(distube: DisTube);
    /**
     * Emit the {@link DisTube} of this base
     * @private
     * @param {string} eventName Event name
     * @param {...any} args arguments
     * @returns {boolean}
     */
    emit(eventName: string, ...args: any[]): boolean;
    /**
     * Emit error event
     * @param {Error} error error
     * @param {Discord.TextChannel?} channel Text channel where the error is encountered.
     * @private
     */
    emitError(error: Error, channel?: TextChannel): void;
    /**
     * The queue manager
     * @type {QueueManager}
     * @readonly
     * @private
     */
    get queues(): QueueManager;
    /**
     * The voice manager
     * @type {DisTubeVoiceManager}
     * @readonly
     * @private
     */
    get voices(): DisTubeVoiceManager;
    /**
     * Discord.js client
     * @type {Discord.Client}
     * @readonly
     * @private
     */
    get client(): Client;
    /**
     * DisTube options
     * @type {DisTubeOptions}
     * @readonly
     * @private
     */
    get options(): Options;
    /**
     * DisTube handler
     * @type {DisTubeHandler}
     * @readonly
     * @private
     */
    get handler(): DisTubeHandler;
}
export default DisTubeBase;
//# sourceMappingURL=DisTubeBase.d.ts.map